services:
  odoo-app:
    container_name: ${WEB_HOST}
    build:
      context: ./odoo-argentina-ce-dockerfiles  # Ruta al directorio que contiene el Dockerfile
      dockerfile: Dockerfile  # (opcional si el archivo se llama Dockerfile)
    image: odoo-ce-adhoc:latest
    #image: ${WEB_IMAGE_NAME}:${WEB_IMAGE_TAG}
    restart: always
    depends_on:
      - odoo-db
    ports:
      - ${WEB_PORT}:8069
    environment:
      - HOST=odoo-db
      - USER=${DB_USER}
      - PASSWORD=${DB_PASSWD}
    networks:
      - traefik_public
    volumes:
      - odoo-app-data:/var/lib/odoo
      - ./config:/etc/odoo
      - ./scripts:/mnt/scripts
    labels:
      - traefik.enable=true
      - traefik.http.routers.odoo.rule=Host(`www.${DOMAIN}`) || Host(`${DOMAIN}`)
      - traefik.http.routers.odoo.entrypoints=web
      - traefik.http.routers.odoo.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.odoo-secure.rule=Host(`www.${DOMAIN}`) || Host(`${DOMAIN}`)
      - traefik.http.routers.odoo-secure.entrypoints=websecure
      - traefik.http.routers.odoo-secure.tls.certresolver=letsencrypt
      - traefik.http.services.odoo.loadbalancer.server.port=8069
      - traefik.http.routers.odoo-websocket.rule=Host(`www.${DOMAIN}`) || Host(`${DOMAIN}`) && PathPrefix(`/websocket`)
      - traefik.http.routers.odoo-websocket.entrypoints=websecure
  odoo-db:
    container_name: odoo-db
    image: ${DB_IMAGE}:${DB_TAG}
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWD}
      - POSTGRES_USER=${DB_USER}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - odoo-db-data:/var/lib/postgresql/data/pgdata
    networks:
      - traefik_public
volumes:
  odoo-app-data:
    name: odoo-app-data
  odoo-db-data:
    name: odoo-db-data
networks: # enable connection with Traefik
  traefik_public:
    external: true



  
